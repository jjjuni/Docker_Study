name: Travloom CI/CD (Docker)

on:
  push:
    branches: [master]

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest  # develop 브랜치에 push가 일어날 때 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v3   # 저장소 코드 체크아웃

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/travloom:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/travloom:latest

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        env:
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          DOCKER_IMAGES: ${{ secrets.DOCKERHUB_USERNAME }}/travloom:latest
          APP_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
          FIREBASE_CREDENTIALS_JSON: ${{ secrets.FIREBASE_CREDENTIALS_JSON }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            mkdir -p ~/travloom
          
            # application.properties 생성
            echo \"$APP_PROPERTIES\" > ~/travloom/application.properties
  
            # serviceAccountKey.json 생성 (base64 디코딩)
            echo \"$FIREBASE_CREDENTIALS_JSON\" | base64 -d > ~/travloom/serviceAccountKey.json
  
            # Docker Compose (ec2에 미리 올려둔 docker-compose.yml로 docker compose)
            cd ~/travloom
            docker compose pull
            docker compose down || true
            docker compose up -d
          "
          rm -f private_key.pem